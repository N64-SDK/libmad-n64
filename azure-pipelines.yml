jobs:
- job: Linux
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - bash: |   
      sudo add-apt-repository ppa:jonathonf/gcc -y
      sudo apt-get -qq update

      sudo apt-get install -y build-essential software-properties-common
      sudo apt-get install -y gcc-8
    displayName: 'Setup Environment'
    continueOnError: false

  - script: |
      curl -L https://dl.bintray.com/n64-tools/mips64-gcc-toolchain/gcc-toolchain-mips64-linux64-8.2.0-20181107.6.tar.gz --output gcc-toolchain-mips64-linux64.tar.gz
      curl -L https://dl.bintray.com/n64-tools/libdragon/libdragon-win64-20181211.4.zip --output libdragon-win64.zip
    displayName: 'Get dependencies'
    continueOnError: false

  - task: ExtractFiles@1
    inputs:
      archiveFilePatterns: 'gcc-toolchain-mips64-linux64.tar.gz' 
      destinationFolder: toolchain/gcc-toolchain-mips64
      cleanDestinationFolder: false 
    displayName: 'Extract gcc-toolchain-mips64-linux64'
    continueOnError: false

  - task: ExtractFiles@1
    inputs:
      archiveFilePatterns: 'libdragon-win64.zip' 
      destinationFolder: toolchain/libdragon
      cleanDestinationFolder: false 
    displayName: 'Extract libdragon-win64'
    continueOnError: false

  - bash: |
      export PATH=$PATH:$BUILD_SOURCESDIRECTORY/toolchain/gcc-toolchain-mips64/bin
      CFLAGS="-std=gnu99 -march=vr4300 -mtune=vr4300 -I$BUILD_SOURCESDIRECTORY/toolchain/libdragon/include" \
      LDFLAGS="-L$BUILD_SOURCESDIRECTORY/toolchain/gcc-toolchain-mips64/lib -Tn64ld.x" \
      LIBS="-ldragon -lc -ldragonsys -lnosys" \
      ./configure --host=mips64-elf --prefix=$BUILD_ARTIFACTSTAGINGDIRECTORY
      make
      make install
    displayName: 'Build Lib'
    continueOnError: false

  # Publish build artifacts to Azure Artifacts/TFS or a file share
  - task: PublishBuildArtifacts@1
    displayName: Publish Build Artifacts
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: 'libmad' 
      publishLocation: 'Container' # Options: container, filePath
      #targetPath: # Required when publishLocation == FilePath
      parallel: true # Optional
      #parallelCount: # Optional

  #- task: GithubRelease@0 
  #  displayName: 'Create GitHub Release'      
  #  inputs:
  #    gitHubConnection: libmad
  #    repositoryName: N64-tools/libmad
  #    #tagSource: manual
  #    #tag: $(Build.BuildNumber)      
  #    assets: |
  #         $(Build.ArtifactStagingDirectory)/*
  #    isDraft: true # Optional
  #    action: 'create' # Options: create, edit, delete
  #    target: '$(Build.SourceVersion)' # Required when action == Create || Action == Edit
  #    tagSource: 'auto' # Required when action == Create# Options: auto, manual
